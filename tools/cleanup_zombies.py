#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–æ–º–±–∏-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤
"""
import os
import sys
import time
import signal

try:
    import psutil
except ImportError:
    print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å psutil: pip install psutil")
    sys.exit(1)


def cleanup_zombies():
    """–û—á–∏—Å—Ç–∫–∞ –∑–æ–º–±–∏-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤"""
    zombie_count = 0
    cleaned_count = 0
    
    print("üîç –ü–æ–∏—Å–∫ –∑–æ–º–±–∏-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
    
    for proc in psutil.process_iter(['pid', 'ppid', 'name', 'status', 'create_time']):
        try:
            if proc.info['status'] == psutil.STATUS_ZOMBIE:
                zombie_count += 1
                age = time.time() - proc.info['create_time']
                age_str = f"{int(age/3600)}—á {int((age%3600)/60)}–º" if age > 3600 else f"{int(age/60)}–º"
                
                print(f"üßü –ó–æ–º–±–∏ PID: {proc.info['pid']}, "
                      f"–ò–º—è: {proc.info['name']}, "
                      f"PPID: {proc.info['ppid']}, "
                      f"–í–æ–∑—Ä–∞—Å—Ç: {age_str}")
                
                # –ï—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å - init (PID 1), –∑–æ–º–±–∏ –º–æ–∂–Ω–æ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –æ—á–∏—Å—Ç–∏—Ç—å
                if proc.info['ppid'] == 1:
                    try:
                        # –ü—ã—Ç–∞–µ–º—Å—è –æ—á–∏—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ waitpid
                        pid, status = os.waitpid(proc.info['pid'], os.WNOHANG)
                        if pid != 0:
                            cleaned_count += 1
                            print(f"  ‚úÖ –û—á–∏—â–µ–Ω –∑–æ–º–±–∏ PID: {pid}")
                    except:
                        print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å PID: {proc.info['pid']}")
                else:
                    # –ï—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å –Ω–µ init, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ—Å–ª–∞—Ç—å SIGCHLD —Ä–æ–¥–∏—Ç–µ–ª—é
                    try:
                        parent = psutil.Process(proc.info['ppid'])
                        os.kill(proc.info['ppid'], signal.SIGCHLD)
                        print(f"  üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω SIGCHLD —Ä–æ–¥–∏—Ç–µ–ª—é PID: {proc.info['ppid']}")
                    except:
                        print(f"  ‚ö†Ô∏è –†–æ–¥–∏—Ç–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                        
        except (psutil.NoSuchProcess, psutil.AccessDenied, KeyError):
            pass
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  –ù–∞–π–¥–µ–Ω–æ –∑–æ–º–±–∏: {zombie_count}")
    print(f"  –û—á–∏—â–µ–Ω–æ: {cleaned_count}")
    
    if zombie_count == 0:
        print("‚ú® –ó–æ–º–±–∏-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
    elif cleaned_count < zombie_count:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–æ–º–±–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å.")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å sudo: sudo python3 cleanup_zombies.py")
        print("   2. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É")
        print("   3. –ù–∞–π—Ç–∏ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã")


def show_process_tree():
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ä–µ–≤–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å –∑–æ–º–±–∏"""
    print("\nüå≥ –î–µ—Ä–µ–≤–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å –∑–æ–º–±–∏:")
    
    zombies = []
    for proc in psutil.process_iter(['pid', 'ppid', 'name', 'status']):
        try:
            if proc.info['status'] == psutil.STATUS_ZOMBIE:
                zombies.append(proc.info)
        except:
            pass
    
    if zombies:
        for zombie in sorted(zombies, key=lambda x: x['ppid']):
            print(f"  ‚îî‚îÄ PID: {zombie['pid']} ({zombie['name']}) "
                  f"‚Üê –†–æ–¥–∏—Ç–µ–ª—å: {zombie['ppid']}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–¥–∏—Ç–µ–ª–µ
            try:
                parent = psutil.Process(zombie['ppid'])
                print(f"     ‚îî‚îÄ –†–æ–¥–∏—Ç–µ–ª—å: {parent.name()} (PID: {parent.pid})")
            except:
                print(f"     ‚îî‚îÄ –†–æ–¥–∏—Ç–µ–ª—å: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")


if __name__ == "__main__":
    print("üßπ –£—Ç–∏–ª–∏—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ –∑–æ–º–±–∏-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
    print("=" * 40)
    
    cleanup_zombies()
    show_process_tree()
    
    print("\n‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ!")