version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: ghcr.io/<org>/mas-app:latest  # replace <org> with real org before pushing
    restart: unless-stopped
    environment:
      # Database & cache hosts (override if necessary)
      CLIENT_POSTGRES_HOST: postgres
      CLIENT_POSTGRES_DB: ${CLIENT_POSTGRES_DB:-masdb}
      CLIENT_POSTGRES_USER: ${CLIENT_POSTGRES_USER:-mas}
      CLIENT_POSTGRES_PASSWORD: ${CLIENT_POSTGRES_PASSWORD:-mas}
      CLIENT_REDIS_HOST: redis
      # Prometheus metrics exporter port
      PROMETHEUS_PORT: 9000
    depends_on:
      - postgres
      - redis
      - prometheus
    ports:
      - "8000:8000"          # application HTTP API (future use)
      - "9000:9000"          # Prometheus metrics endpoint

  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${CLIENT_POSTGRES_USER:-mas}
      POSTGRES_PASSWORD: ${CLIENT_POSTGRES_PASSWORD:-mas}
      POSTGRES_DB: ${CLIENT_POSTGRES_DB:-masdb}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    ports:
      - "6380:6379"

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./deploy/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

volumes:
  postgres-data:
  redis-data: